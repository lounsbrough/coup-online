name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  contents: read

jobs:
  # verify:
  #   uses: ./.github/workflows/verify.yml
  #   secrets: inherit

  # deploy-server:
  #   needs: verify
  #   runs-on: ubuntu-latest
  #   concurrency: deploy-server-${{ inputs.environment }}

  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: ./.github/actions/setup-node

  #   - run: |
  #       cd server
  #       vercel link --yes --project coup-server --token=${{ secrets.VERCEL_TOKEN }}
  #       vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
  #       pnpm build
  #       if [ "${{ inputs.environment }}" = "production" ]; then
  #         vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #       else
  #         vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #       fi
  #       vercel deploy --prebuilt --target=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}

  deploy-socket-server:
    # needs: verify
    runs-on: ubuntu-latest
    concurrency: deploy-socket-server-${{ inputs.environment }}
    # if: ${{ inputs.environment == 'production' }}

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-node

    - env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.SOCKET_SERVER_SSH_KEY }}"
      shell: bash

    - env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh pi@lounsbrough.com -p 8222 -t 'pwd'
      shell: bash

  # deploy-client:
  #   needs: verify
  #   runs-on: ubuntu-latest
  #   concurrency: deploy-client-${{ inputs.environment }}

  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: ./.github/actions/setup-node

  #   - run: |
  #       cd client
  #       vercel link --yes --project coup-client --token=${{ secrets.VERCEL_TOKEN }}
  #       vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
  #       if [ "${{ inputs.environment }}" = "production" ]; then
  #         vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #       else
  #         vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #       fi
  #       vercel deploy --prebuilt --target=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
