name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  contents: read

jobs:
  verify:
    uses: ./.github/workflows/verify.yml
    secrets: inherit

  deploy-server-vercel:
    needs: verify
    runs-on: ubuntu-latest
    concurrency: deploy-server-${{ inputs.environment }}

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-node

    - run: |
        cd server
        vercel link --yes --project coup-server --token=${{ secrets.VERCEL_TOKEN }}
        vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
        pnpm build
        if [ "${{ inputs.environment }}" = "production" ]; then
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        else
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        fi
        vercel deploy --prebuilt --target=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}

  deploy-server-raspberry-pi:
    needs: verify
    runs-on: ubuntu-latest
    concurrency: deploy-socket-server-${{ inputs.environment }}
    if: ${{ inputs.environment == 'production' }}

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-node

    - uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ secrets.SOCKET_SERVER_SSH_KEY }}

    - uses: appleboy/ssh-action@v1.2.2
      with:
        host: lounsbrough.com
        username: pi
        key: ${{ secrets.SOCKET_SERVER_SSH_KEY }}
        port: 8222
        script: |
          set -e
          cd /var/www/html/coup-online/server
          git pull
          sudo npm i -g pnpm
          pnpm i
          pnpm build
          /home/pi/.local/share/pnpm/pm2 restart coup-online

  deploy-client-vercel:
    needs: verify
    runs-on: ubuntu-latest
    concurrency: deploy-client-${{ inputs.environment }}

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-node

    - run: |
        cd client
        vercel link --yes --project coup-client --token=${{ secrets.VERCEL_TOKEN }}
        vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
        if [ "${{ inputs.environment }}" = "production" ]; then
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        else
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        fi
        vercel deploy --prebuilt --target=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
